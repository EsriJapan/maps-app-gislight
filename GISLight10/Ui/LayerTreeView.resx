<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imageList_LayerTypes.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="imageList_LayerTypes.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj0yLjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAADi
        GwAAAk1TRnQBSQFMAgEBCAEAATABAAEwAQABFAEAARABAAT/ARkBAAj/AUIBTQE2BwABNgMAASgDAAFQ
        AwABMAMAAQEBAAEYBgABLf8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AD8AA/4G8wP+MAAD/gbz
        A/4wAAP+BvMD/mkAA/0D6wGYAZoBnAGYAZoBnAPrA/0qAAP9A+sBmAGaAZwBmAGaAZwD6wP9KgAD/QPr
        AZgBmgGcAZgBmgGcA+sD/R4AA/sDyz8AA/sD5QF+AYoBkAGPAeAB+AGUAeEB+AF9AYoBkAPlA/skAAP7
        A+UBfgGKAZABjwHgAfgBlAHhAfgBfQGKAZAD5QP7JAAD+wPlAX4BigGQAWYBlwGhAW4BpAGvAX0BigGQ
        A+UD+xsAA/cDiTwAA/oD3AFGAYgBpQFIAcwB7gEfATYBOgEfATYBOgFUAc4B7gFNAYwBqAPcA/oeAAP6
        A9wBRgGIAaUBVAHbAf4BtwHtAfwBtwHtAfwBXwHdAf4BTQGMAagD3AP6HgAD+gPcAUYBiAGlAUIBiwGP
        AZ4B2gGeAZYBzgGWAUkBjQGPAU0BjAGoA9wD+hgAA/kDjwP2NgAD9wHFAsYBSAGRAa0BLAGoAcsBJAE3
        AToBTgHJAc8BTgHJAc8BKgFGAUoBQAG6AdwBRAGSAa8BxQLGA/cYAAP3AcUCxgFIAZEBrQFNAdMB+gG2
        AeoB+gG1AekB+gG0AekB+gG0AegB+gFWAdcB+wFEAZIBrwHFAsYD9xgAA/cBxQLGAUgBjAGnATIBbwFw
        AYYBtgGGAaYB5gKmAeYBpgF4AakBeQExAYEBhQFEAY0BqAHFAsYD9xgAA7oDjAP0LQAD/gP0A74BKAGc
        AdIBWQGqAcYBEwEjAToBHwFAAYABWwHoAe8BYQH3Af8BWwHoAe8BGQE4AToBXQGtAcgBHQGfAdcDvgP0
        A/4MAAP+A/QDvgEoAZwB0gE4AXoBmAFoAY8BmwGtAeQB+AGsAeMB+AGrAeMB+AGqAeMB+AFmAY4BmwE+
        AYMBmQEdAZ8B1wO+A/QD/gwAA/4D9AO+ASABkAHFAUQBdgFtAY4BxQGOAW8BnQFvAXcBpwF4AXoBqwF6
        AZwB1gGdAbgB/wG4AVMBkgGDARUBlAHKA74D9AP+DwAD9QPzA6gDewPZHvUMAAPzAaECogE4AZsB0QFT
        AYUBlwEWAS4BWwE+AYAB7wFCAYkB/wE/AaMBrwFhAfcB/wFhAfcB/wFbAegB7wElAVYBWgFXAYYBmAE6
        AagB2wOiA/MMAAPzAaECogE4AZsB0QGVAdgB9AFiAYwBmgMAAY8BwwHXAaMB3gH2AaIB3gH2AY0BwgHX
        AwABXgGJAZkBlwHYAfQBOgGoAdsDogPzDAAD8wGhAqIBIAFzAaoBXAFoAVgBhwG7AYgBjgHFAo4BxQGO
        AVQBcAFVAWYBjgFnAbgB/wK4Af8BuAGmAeQBpgFmAXcBaAEkAYYBtQOiA/MMAAPrA84DTgYqA2wDKQwo
        AyoDKAMpAyoDNgwAAYkBjQGRAWIBsQHdAVUBdwGKARoBNwFrAUIBiQH/AUIBiQH/AUIBiQH/ASkBXQGP
        AWEB9wH/AWEB9wH/AWEB9wH/AWEB9wH/ASEBWAFbAVABdAGJAVIBqwHbAYwBkAGTDAABiQGNAZEBYgGx
        Ad0BngHbAfUBnQHaAfUBnAHaAfQBDgEWARkMAAEOARYBGQGXAdYB8wGWAdYB8wGVAdYB8wFSAasB2wGM
        AZABkwwAAYkBjQGRAUoBhQGmAbUBuAGOAv8BuAGfAaYBdwF1AacBdgFbAXoBXAGHAbsBiAGHAbsBiAFq
        AZQBawGcAdYBnQG2AbsBigL/AbgBtAG4AY4BNwF6AagBjAGQAZMMAAPOAy4DrAblA3Eb5QM2DAABWgFz
        AYsBlQHWAfMBHwEwATgBLAFZAa8BQgGJAf8BQgGJAf8BQgGJAf8BQwFjAaMBYQGSAYYBOwGaAZ8BVAHY
        Ad8BYQH3Af8BQQGqAa8BJgE8AUYBhAHIAesBWwF3AY8MAAFcAXUBiwGVAdYB8wGVAdUB8wGUAdUB8wGT
        AdQB8gFWAYQBlwEEAQgBCgGIAcYB4wGHAcUB4gEEAQgBCgFTAYMBlwGNAdEB8QGNAdEB8QGMAdAB8QGE
        AckB6wFbAXcBjwwAAVwBdQGLAXgBigF1Av8BuAL/AbgC8QGvAXEBbgFYAWgBkwFpAY4BxQKOAcUBjgFv
        AZYBawJxAVgC8QGvAv8BuALxAa8BbwGBAW8BWwF3AY8MAAM/A6wD6APnA+gDagnnD6wD5wM9DAAD+wGJ
        AY4BkwGEAcgB6gEuAUgBVQEnAVEBnwFCAYkB/wFFAVcBdwHvAckBjwH/AdYBmQH/AdYBmQG/AaEBbgEo
        ATUBLgEsAUcBVAF4AcUB6gGJAZEBlQP7DAAD+wGJAY4BkwGEAcgB6gGLAc8B8QGKAc8B8AGJAc4B8AEM
        ARUBGQFHAW4BhwE/AWIBcwELARQBGQGFAcwB7wGEAcwB7wGDAcsB7wF4AcUB6gGJAZEBlQP7DAAD+wGJ
        AY0BkQFuAYkBhALWAZ0BnwGaAXMB/wHyAbgB1gHLAZ0BbwGWAWsBbwGWAWsC1gGdAv8BuAKfAXMC5AGm
        AWUBhQGIAYkBkQGVA/sMAAM+A+sDnQNGA0gDtAzqA+sG6gPrA+4DRQ8AA/sCpQGmAWoBuAHgAUIBbAGG
        ARgBIgE0Ae8ByQGPAf8B1gGZAf8B1gGZAf8B1gGZAVsBSwE0AT8BagGFAWYBuAHjAqUBpgP7EgAD+wKl
        AaYBagG4AeABgQHJAe4BgAHJAe4BSgF4AZUBCwEUARkBCwEUARkBQQFrAYYBdwHGAe0BdgHGAe0BZgG4
        AeMCpQGmA/sSAAP7AqUBpgFKAWUBcAHxAeUBrwH/AfIBuAH/AfIBuAGSAYsBagGSAZABagL/AbgC/wG4
        AtYBnQFCAWYBdwKlAaYD+w8AA00D7wNvAyEDHAntEqwD9ANKFQABuwK8AV0BsAHcAUUBdQGTAVsBSwE0
        Ae8ByQGPAe8ByQGPAVIBSgE5AUIBcwGTAVsBsQHgAbsCvB4AAbsCvAFdAbAB3AFyAcMB7AFxAcMB7AEJ
        ARMBGAECAQcBCgFnAbUB3AFuAcEB6wFbAbEB4AG7ArweAAG7ArwBRgFxAY4ByAG/AZQBnwGYAXMB8QHl
        Aa8B8QHlAa8BnwGdAXMC1gGdAUsBhAGfAbsCvBUAA1wD9AOrA1kDjwPvA/AD7wPwD+8D+QNTGAAD2QFM
        AaIB0wFTAZkBvgExAS8BJgExAS8BJgFRAZgBvQFMAaUB1wPZJAAD2QFMAaIB0wFoAb0B6gFnAb0B6gFm
        AbwB6gFlAbwB6QFMAaUB1wPZJAAD2QEwAWMBiQG/AbsBlwH/AfIBuAH/AfIBuAGjAaEBhAE1AXABmgPZ
        GAADUwPeA/MG8QPyA/EVrAP8A1obAAPpAV0BhgGeAUsBlAG8AVABoAHKAV0BhgGfA+kqAAPpAV0BhgGe
        AV4BtwHoAV0BtwHnAV0BhgGfA+kqAAPpAVoBdgGOAbEBrgGNAaMBoQGEAVoBdwGPA+kbAAPsA5UD5yT9
        A14eAAPwAXUBhAGPAXUBhAGPA/AwAAPwAXUBhAGPAXUBhAGPA/AwAAPwAXIBgQGKAXUBgwGPA/AeAAP8
        A+ADYwZeBl8DYQNeA2EGXwNhCV//AA8AA/wGwAP8MAAD/AbAA/wwAAP+BvMD/jAAA/4G8wP+LQAD7gF9
        AYYBjAGKAd0B9QGPAd4B9QF9AYYBjAPuKgAD7gF5AXwBhQGdAbYB2AGpAcMB4QF8AX0BhgPuKgAD/QPr
        AZgBmgGcAZgBmgGcA+sD/SoAA/0D6wGYAZoBnAGYAZoBnAPrA/0kAAP+A8wBPgGIAaUBUAHZAf4BeQGx
        AcsBbAGkAcABWwHcAf4BRAGKAaYD0wP+HgAD/gPMAVcBZwGGAbsB1gH1AWcBlwHRAWMBkwHRAbkB0wH0
        AVoBZwGKA9MD/iEAA/sD5QF+AYoBkAGPAeAB+AGUAeEB+AF9AYoBkAPlA/skAAP7A+UBfgGKAZABjwHg
        AfgBlAHhAfgBfQGKAZAD5QP7HgAD9wGkAqUBHgGnAdoBbgHIAecBRgGNAbMBigHdAfUBjwHeAfUBSQGP
        AbMBagHIAegBGgGsAd8BpAKlA/cYAAP3AqQBpQFfAYcBvAGWAb8B8gE5AYABvgGAAc4B7QGEAc8B7QE4
        AXkBvwGZAcAB8gFfAYcBuAKkAaUD9xsAA/oD3AFGAYgBpQFUAdsB/gG3Ae0B/AG3Ae0B/AFfAd0B/gFN
        AYwBqAPcA/oeAAP6A9wBRgGIAaUBVAHbAf4BtwHtAfwBtwHtAfwBXwHdAf4BTQGMAagD3AP6FQAD/gPm
        AWcBegGMAVUBuQHkAWsBrAHNARABmAHKAVAB2QH+AXkBsQHLAWwBpAHAAVsB3AH+ARkBnAHMAWYBrAHP
        AU0BvAHnAXkBhAGMA+YD/gwAA/4D5gFnAW0CgwGxAeIBYgGbAdsBGAGIAckBPwHQAfkBWgGoAawBXAGn
        AasBSwHTAfkBHgGMAcsBagGhAeIBgQGvAd8BeQF9AYUD5gP+EgAD9wHFAsYBSAGRAa0BTQHTAfoBtgHq
        AfoBtQHpAfoBtAHpAfoBtAHoAfoBVgHXAfsBRAGSAa8BxQLGA/cYAAP3AcUCxgFIAZEBrQFNAdMB+gG2
        AeoB+gG1AekB+gG0AekB+gG0AegB+gFWAdcB+wFEAZIBrwHFAsYD9xIAA88BOgGDAbYBdQG/AeMBSAGP
        AbcBHgGnAdoBbgHIAecBRgGNAbMBigHdAfUBjwHeAfUBSQGPAbMBagHIAegBGgGsAd8BRQGQAboBcwHB
        AeYBMwGFAbgDzwwAA88BNgFXAZgBhwG3Ae0BQAGBAccBEwGRAdEBRgHBAeIBNAF4AWwBVwG1AaoBXgG9
        AbMBOwF5AXABQgHBAeIBEAGXAdUBQQF6AcYBhQG0AewBLQFQAYwDzwwAA/4D9AO+ASgBnAHSAXkB1QH1
        AY4BugHKAa0B5AH4AawB4wH4AasB4wH4AaoB4wH4AZUBxgHZAYIB1wH2AR0BnwHXA74D9AP+DAAD/gP0
        A74BKAGcAdIBbgHHAeUBXgGBAYwBrQHkAfgBrAHjAfgBqwHjAfgBqgHjAfgBqgHiAfcBggHXAfYBHQGf
        AdcDvgP0A/4MAAGkAqUBbQGsAc0BKAFyAakBVQG5AeQBawGsAc0BEAGYAcoBUAHZAf4BtQHsAfwBtAHs
        AfsBWwHcAf4BGQGcAcwBZgGsAc8BTQG8AecBIgF1Aa0BYwGmAcsDpQwAAqQBpQFUAYEBxAElAWgBsgE+
        AaYB2wFTAacBtAE4AYwBeAFqAdABxgFhAccBuQGCAeYB4QFzAdoB1AFGAZQBiQFYAagBugEvAacB3gEr
        AWwBtwFRAYABwAKkAaUMAAPzAaECogE4AZsB0QGVAdgB9AFYAXkBiwMAAXYBpwG5AaMB3gH2AaIB3gH2
        AVYBdwGKAwABXwGKAZkBlwHYAfQBOgGoAdsDogPzDAAD8wGhAqIBOAGbAdEBlQHYAfQBmwHRAecBLgFA
        AUgBOQFPAVcBmQHQAecBogHeAfYBoQHdAfYBoQHdAfUBoAHcAfUBlwHYAfQBOgGoAdsDogPzDAADzwE6
        AYMBtgF1Ab8B4wFIAY8BtwEeAacB2gGIAd0B+QGyAecB+QGxAecB+QGwAeYB+QGvAeYB+QGDAdwB+QEa
        AawB3wFFAZABugFzAcEB5gEzAYUBuAPPDAADzwEkAWkBsAFhAbAB2AFKAZgBkwFEAZ0BiQGwAd4BzAG9
        AdYBvwFvAbQBnAFjAcEBsQGRAeoB5gGCAeIB2wFPAaMBkgFIAYQBhgFRAasB1wEgAWYBrgPPDAABiQGN
        AZEBYgGxAd0BngHbAfUBnQHaAfUBeQGxAcYBKwE+AUcBhwG+AdUBmgHZAfQBmQHYAfQBhQG9AdUBIAEw
        ATgBgwG7AdUBlgHWAfMBlQHWAfMBUgGrAdsBjAGQAZMMAAGJAY0BkQFiAbEB3QGeAdsB9QGdAdoB9QGc
        AdoB9AF6AbEBxgMAARgBJAEpAZABywHkAZgB2AH0AW0BogG3AVABdAGJAZYB1gHzAZUB1gHzAVIBqwHb
        AYwBkAGTDAABpAKlAW0BrAHNASgBcgGpAVUBuQHkAaAB3gH2AagB4QH3AacB4QH3AaYB4AH3AaYB4AH2
        AaUB3wH2AaQB3gH2AZoB2wH1AU0BvAHnASIBdQGtAWMBpgHLA6UMAAGkAqUBTgGZAboBLgGEAWwBUwGr
        AZEBswHRAbgB/wHtAdMB/wHtAdIB0QHZAb8BbwG0AZoBTAGqAZQBVAGzAaABcgG2AZwBnwHJAa8BQgGB
        AXIBSQGNAbMBpAKlDAABWgFzAYsBlQHWAfMBlQHVAfMBlAHVAfMBkwHUAfIBkgHUAfIBkQHUAfIBkQHT
        AfIBkAHSAfIBjwHSAfIBjgHRAfEBjQHRAfEBjQHRAfEBjAHQAfEBhAHIAesBWwF3AY8MAAFaAXMBiwGV
        AdYB8wGVAdUB8wGUAdUB8wFYAYUBmAEEAQgBCgFeAZEBpgE5AVcBZQEWASMBKAFMAXIBiAEEAQgBCgFk
        AZwBtQGNAdEB8QGMAdAB8QGEAckB6wFbAXcBjwwAA88BOgGDAbYBhAHKAe0BnwHcAfUBngHbAfUBnQHb
        AfUBnAHaAfQBmwHaAfQBmwHZAfQBmgHYAfQBmQHYAfQBmAHXAfMBlwHXAfMBgAHMAe8BMwGFAbgDzwwA
        A88BOQGSAXEBbgHMAboBQQGhAYgB8wHlAckB/wHqAcwB/wHpAcwB/wHpAcsB/wHpAcsB3AHbAb0B0QHW
        AbkB6AHfAcEB/wHoAckB2QHaAboBXQGUAXYDzwwAA/sBiQGOAZMBhAHIAeoBiwHPAfEBigHPAfABiQHO
        AfABiAHOAfABegHBAeEBeQHAAeEBhgHMAe8BhQHMAe8BhAHMAe8BgwHLAe8BeAHFAeoBiQGRAZUD+wwA
        A/sBiQGOAZMBhAHIAeoBiwHPAfEBPwFiAXMBagGnAcMBiAHOAfABhwHNAfABTwGAAZYDAAFOAXoBlQGE
        AcwB7wGDAcsB7wF4AcUB6gGJAZEBlQP7DAABpAKlAY0BzAHqAZUB1gHzAZQB1QHzAZMB1QHyAZMB1AHy
        AZEB0wHyAZEB0wHyAZAB0gHyAY8B0gHxAY4B0QHxAY0B0QHxAYwB0AHxAYsBzwHwAYIBxQHnA6UMAAOl
        AWwBzgG/AXUB3AHSAVUBuQGmAVgBqgGQAZcBwAGkAf8B5gHGAf8B5gHFAf8B5gHEAf8B5QHEAf8B5QHD
        Af8B5QHDAf8B5QHCAf8B5AHCAfEB2gG4A6UPAAP7AqUBpgFqAbgB4AGBAckB7gGAAckB7gF6AcgB7gED
        AQgBCgELARQBGQF4AccB7QF3AcYB7QF2AcYB7QFmAbgB4wKlAaYD+xIAA/sCpQGmAWoBuAHgAYEByQHu
        AYAByQHuAXoByAHuAXkByAHuAXkBxwHuAUgBdwGUARIBIAEnAXYBxgHtAWYBuAHjAqUBpgP7DwAD+wGk
        AqUBbAGxAdUBigHPAfABiQHOAfABiAHNAfABhwHNAfABhgHMAe8BhQHMAe8BhAHLAe8BgwHLAe8BggHK
        Ae4BgQHJAe4BXQGlAc0CsAGxA/sMAAP7AaQCpQFiAcYBugF4AeAB2QFTAbYBowGLAboBnQHRAdMBsgHz
        Ad8BuwG6AcoBqgGAAbYBmQHRAdIBsAHcAdYBswHcAdYBsgHFAboBmgGwAbEBsAP7FQABuwK8AV0BsAHc
        AXIBwwHsAXEBwwHsAS0BTwFiATwBaAGEAW8BwQHrAW4BwQHrAVsBsQHgAbsCvB4AAbsCvAFdAbAB3AFy
        AcMB7AFxAcMB7AFwAcIB7AFvAcIB7AFvAcEB6wFuAcEB6wFbAbEB4AG7ArwbAAPZAWQBhQGcAXkBxwHu
        AXgBxwHtAXcBxgHtAXYBxgHtAXUBxQHtAXQBxQHsAXMBxAHsAXIBwwHsAWEBhQGcA9kYAAPZAWQBkQGK
        AW4B1wHOAVUBtwGlAVcBtAGgAU0BpQGLAVMBqgGRAYYB0gHHAUsBqgGUAUEBoQGIAVkBdwFyA9keAAPZ
        AUwBogHTAWgBvQHqAWcBvQHqAWYBvAHqAWUBvAHpAUwBpQHXA9kkAAPZAUwBogHTAWgBvQHqAWcBvQHq
        AWYBvAHqAWUBvAHpAUwBpQHXA9khAAP3AYoBkQGVAWgBuwHmAWwBwAHrAWsBvwHqAWoBvgHqAWkBvgHq
        AV8BtAHiAYoBkQGVA/ceAAP3AYoBkQGQAXQB3QHXAYwB6AHlAYEB2AHPAYQB2AHQAZQB6gHnAXMB1AHO
        AYkBjgGNA/ckAAPpAV0BhgGeAV4BtwHoAV0BtwHnAV0BhgGfA+kqAAPpAV0BhgGeAV4BtwHoAV0BtwHn
        AV0BhgGfA+kqAAG7ArwBSgGfAdABYAG4AegBXwG4AegBSAGfAdEBuwK8KgABuwK8AVgBuQGvAYAB5QHg
        AYAB5QHhAVkBtgGuAbsCvC0AA/ABdQGEAY8BdQGEAY8D8DAAA/ABdQGEAY8BdQGEAY8D8DAAA+kBWwF9
        AZYBWwF9AZYD6TAAA+kBXwGKAYMBXwGHAYID6YoAAUIBTQE+BwABPgMAASgDAAFQAwABMAMAAQEBAAEB
        BQABQAECFgAD/8EAAf8BwwH/AfwBPwH/AcMD/wIAAf8BgQH/AfgBHwH/AYEB/wGfAf8CAAH/AQAB/wHw
        AQ8B/wEAAf8BnwH/AgAB/gEAAX8B4AEHAf4BAAF/AY8B/wIAAfwBAAE/AcABAwH8AQABPwHHAf8CAAHw
        AQABDwIAAfABAAEPAYADAAHwAQABDwIAAfABAAEPBAAB8AEAAQ8CAAHwAQABDwQAAfABAAEPAgAB8AEA
        AQ8EAAHwAQABDwIAAfABAAEPBAAB+AEAAR8BgAEBAfgBAAEfBAAB/gEAAX8B4AEHAf4BAAF/BAAB/wEA
        Af8B8AEPAf8BAAH/BAAB/wGBAf8B+AEfAf8BgQH/BAAB/wHDAf8B/AE/Af8BwwH/BAAK/wIAAf8BwwH/
        AfwBPwH/AcMB/wH8AT8CAAH/AYEB/wH4AR8B/wGBAf8B+AEfAgAB/gEAAX8B4AEHAf8BAAH/AfABDwIA
        AfwBAAE/AcABAwH+AQABfwHgAQcCAAHwAQABDwIAAfwBAAE/AcABAwIAAfABAAEPAgAB8AEAAQ8EAAHw
        AQABDwIAAfABAAEPBAAB8AEAAQ8CAAHwAQABDwQAAfABAAEPAgAB8AEAAQ8EAAHwAQABDwIAAfABAAEP
        BAAB8AEAAQ8CAAH4AQABHwGAAQECAAHwAQABDwIAAf4BAAF/AeABBwIAAfwBAAE/AcABAwH/AQAB/wHw
        AQ8CAAH+AQABfwHgAQcB/wGBAf8B+AEfAgAB/wGBAf8B+AEfAf8BwwH/AfwBPwIAAf8BwwH/AfwBPwX/
        AgAL
</value>
  </data>
</root>